# Application-specific configuration

http-client.root-path.auth=http://authapp:8080
http-client.root-path.menu=http://menuapp:8080

messaging.exchange.restaurant=restaurant
messaging.queue.menu=menu

messaging.queue.order.status=order.status
messaging.queue.order.doneForDelivery=order.doneForDelivery

messaging.queue.delivery=delivery
messaging.routing-key.order=order.#

messaging.routing-key.order.status=order.status.#
messaging.routing-key.order.doneForDelivery=order.doneForDelivery.#


messaging.routing-key.being-prepared.order=order.beingPrepared.#
messaging.routing-key.delivered.order=order.delivered.#
messaging.routing-key.canceled.order=order.canceled.#


messaging.routing-key.deadletter=deadLetter
messaging.queue.deadletter=deadLetterQueue
messaging.exchange.deadletter=deadLetterExchange
# Web
#server.port=8083
# MongoDB (see: development/docker-compose.yml)
# N.B: Add auth in production (use env vars)
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=order
spring.data.mongodb.username=admin
spring.data.mongodb.password=admin
spring.data.mongodb.auto-index-creation=true
# RabbitMQ (see: development/docker-compose.yml and RabbitMqConfiguration)
# N.B: Add auth in production (use env vars)
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.publisher-confirm-type=simple

